Given a string s and an integer k, return the maximum number of vowel letters in any substring of s with length k.

Vowel letters in English are 'a', 'e', 'i', 'o', and 'u'.

 

Example 1:

Input: s = "abciiidef", k = 3
Output: 3
Explanation: The substring "iii" contains 3 vowel letters.
Example 2:

Input: s = "aeiou", k = 2
Output: 2
Explanation: Any substring of length 2 contains 2 vowels.
Example 3:

Input: s = "leetcode", k = 3
Output: 2
Explanation: "lee", "eet" and "ode" contain 2 vowels.

Approach 1 :  bruteforce but it gets TLE error
class Solution {
    public int maxVowels(String s, int k)
    {
        int max_vowels = 0;

        for(int i=0;i<s.length()-k+1;i++)
        {
            String temp = s.substring(i,i+k);
            int temp_vowels = 0;
		    for(int j=0;j<temp.length();j++)
		    {
		        if(temp.charAt(j) == 'a' || temp.charAt(j) == 'e' || temp.charAt(j) == 'i' || temp.charAt(j) == 'o' || temp.charAt(j) == 'u')
		        {
		            temp_vowels++;
		        }
		    }
		    max_vowels = Math.max(max_vowels,temp_vowels);
        }

        return max_vowels;

        
    }
}

Approach 2 : sliding window


class Solution {
    public int maxVowels(String s, int k)
    {
        	int max_vowels = 0;
         String temp = s.substring(0,0+k);
           
		    for(int j=0;j<temp.length();j++)
		    {
		        if(temp.charAt(j) == 'a' || temp.charAt(j) == 'e' || temp.charAt(j) == 'i' || temp.charAt(j) == 'o' || temp.charAt(j) == 'u')
		        {
		            max_vowels++;
		        }
		    }
         
        
         int temp_vowels = max_vowels;
        for(int i=0;i<s.length()-k;i++)
        {
            
           temp = temp + s.charAt(i+k);
           char ch = temp.charAt(0);
           temp = temp.substring(1);
            if(ch == 'a' || ch == 'e' || ch == 'i' || ch  == 'o' || ch == 'u')
		        {
		            temp_vowels--;
		        }
		        
            if(temp.charAt(temp.length()-1) == 'a' || temp.charAt(temp.length()-1) == 'e' || temp.charAt(temp.length()-1) == 'i' || temp.charAt(temp.length()-1) == 'o' || temp.charAt(temp.length()-1) == 'u')
		        {
		            temp_vowels++;
		        }
                
                
		    max_vowels = Math.max(max_vowels,temp_vowels);
        }

        return max_vowels;

        
    }
}
