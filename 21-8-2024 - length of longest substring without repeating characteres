Given a string s, find the length of the longest 
substring without repeating characters.
Example 1:
Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

class Solution {
    public int lengthOfLongestSubstring(String s) 
    {
        if(s.length() == 0)
        {
            return 0;
        }
        int left =0,right =0;
        Set<Character> set = new LinkedHashSet<>(); 
        int max =0;
        while(right < s.length())
        {
            if(!set.contains(s.charAt(right)))
            {
                set.add(s.charAt(right));
                right++;
                max = Math.max(max,set.size());
            }
            else{
                while(set.contains(s.charAt(right)))
                {
                    set.remove(s.charAt(left));
                    left++;
                }
                
                set.add(s.charAt(right));
                right++;
                max = Math.max(max,set.size());
            }
        }
        return max;
        
    }
}
