Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.
Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]

Approach1:
1. copy all non zero elements from the begining index
2. then assign remaining all the elements as 0;
class Solution {
    public void moveZeroes(int[] nums) 
    {
        int ind = 0;
        for(int i:nums)
        {
            if(i!=0)
            {
                nums[ind++] = i;
            }
        }
        while(ind < nums.length)
        {
            nums[ind++] = 0;
        }
        
    }



class Solution {
    public void moveZeroes(int[] nums) 
    {
        ArrayList<Integer> arr = new ArrayList<>();
        int count =0;
        for(int i:nums)
        {
            if(i==0)
            {
                count++;
            }
            else{
                arr.add(i);
            }
        }

        int i=1;
        while(i<=count)
        {
            arr.add(0);
            i++;
        }

        for(i=0;i<arr.size();i++)
        {
            nums[i] = arr.get(i);
        }
        
    }
}
