You are given an integer array nums consisting of n elements, and an integer k.

Find a contiguous subarray whose length is equal to k that has the maximum average value and return this value. Any answer with a calculation error less than 10-5 will be accepted.

 

Example 1:

Input: nums = [1,12,-5,-6,50,3], k = 4
Output: 12.75000
Explanation: Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75
Example 2:

Input: nums = [5], k = 1
Output: 5.00000

Approach:(sliding window)
1. window size = k;
2. calcualte sum up to first k elements
3. in the second iteration instead of calculating sum again just remove the previous element and add the new element from the sum
4. if the calculated average greater than the current average change it.
5. return max average

class Solution {
    public double findMaxAverage(int[] nums, int k) {
        double sum = 0;
        for(int i=0;i<k;i++)
        {
            sum = sum+nums[i];
        }
        double max_avg = sum/k;

        for(int i=0;i<nums.length-k;i++)
        {
            sum = sum-nums[i]+nums[i+k];
            double avg = sum/k;
            max_avg = Math.max(max_avg,avg);
        }

        return max_avg;
    }
}
