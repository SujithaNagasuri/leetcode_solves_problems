An integer n is strictly palindromic if, for every base b between 2 and n - 2 (inclusive), the string representation of the integer n in base b is palindromic.
Given an integer n, return true if n is strictly palindromic and false otherwise.
A string is palindromic if it reads the same forward and backward.
Example 1:
Input: n = 9
Output: false
Explanation: In base 2: 9 = 1001 (base 2), which is palindromic.
In base 3: 9 = 100 (base 3), which is not palindromic.
Therefore, 9 is not strictly palindromic so we return false.
Note that in bases 4, 5, 6, and 7, n = 9 is also not palindromic.

class Solution {
    public boolean isStrictlyPalindromic(int n) 
    {

        for(int i=2;i<=n-2;i++)
        {
            if(!palin(BaseConverter(n,i)))
            {
                return false;
            }
        }        
        return true;
    }
    public String BaseConverter(int n, int base)
    {
        StringBuilder str = new StringBuilder();
       
        while(n>0)
        {
            int rem = n%base;
            str.insert(0,rem);
            n = n/base;
        }
        return str.toString();
    }
    public Boolean palin(String s)
    {
        char[] ch = s.toCharArray();
        int left=0,right=s.length()-1;
        while(left<right)
        {
            if(ch[left++] != ch[right--])
            {
                return false;
            }
        }
        return true;
    }
}
