Given a 0-indexed string word and a character ch, reverse the segment of word that starts at index 0 and ends at the index of the first occurrence of ch (inclusive). If the character ch does not exist in word, do nothing.

For example, if word = "abcdefd" and ch = "d", then you should reverse the segment that starts at 0 and ends at 3 (inclusive). The resulting string will be "dcbaefd".
Return the resulting string.

 

Example 1:

Input: word = "abcdefd", ch = "d"
Output: "dcbaefd"
Explanation: The first occurrence of "d" is at index 3. 
Reverse the part of word from 0 to 3 (inclusive), the resulting string is "dcbaefd".


class Solution {
    public String reversePrefix(String word, char ch) 
    {
        int x = word.indexOf(ch);
        if(x==-1){return word;}
        // StringBuilder str = new StringBuilder(word);
        // StringBuilder temp = new StringBuilder(str.substring(0,x+1));
        // return new String(temp.reverse().append(str.substring(x+1)));
        int left =0, right = x;
       char[] c = word.toCharArray();
        while(left<right)
        {
            char temp = c[left];
            c[left] = c[right];
            c[right] = temp;
            left++;
            right--;
        }
        return new String(c);

    }
}
